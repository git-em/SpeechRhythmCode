###############################################################################################################
# SpeechRhythmExtractor.psc
# Copyright (C) 2019, 2020, 2021 SILVA JR., Leonidas. & BARBOSA, Plinio Almeida. version 1.8
# SpeechRhythmExtractor (version 1.8)
# Script implemented by Leonidas SILVA JR. (State University of Paraiba / University of Campinas - Brazil) 
# & Plinio A. BARBOSA (University of Campinas - Brazil). 
# SpeechRhythmExtractor aims to build rhythmic multidimensional modellings of vowel, consonant, 
# phonetic syllable and chunk units computed from (the classical) metrics and prosodic-acoustic parameters.
# This script can be used in a cross-section of diifferent languages and dialects. 
# Audio/TEXTGRID files are required and have to be in the same directory of the script.
# Please, read the HANDOUT file to check segmentation protocol
#----------#----------#----------# Script under updating process #----------#----------#----------#----------#
# 	
#----------#----------#----------#### HOW TO CITE THIS SCRIPT ####----------#----------#----------#----------#
# SILVA JR., L.; BARBOSA, P. A. (2021), [Script for Praat]. SpeechRhythmExtractor (version 1.8).
#----------#----------#----------#----------#----------#----------#----------#----------#----------#
###############################################################################################################

## Getting started...

form Form of input parameters
 word Directory C:\Users\Leonidas\Dropbox\MyPC(DESKTOP-9TQMPLL)\Documents\Course6					
 			### check trailing spaces
 #word Directory PASTE DIRECTORY PATH HERE
 word Extension metrics
 comment Is your research about a foreign/second language or
 comment diferences between dialects in the same language?
 choice Linguistic_category: 1 
 	button LANGUAGE
 	button DIALECT
 integer VVtier 1
 	## integer PhoneTier # (under updating...)
 integer VCtier 2
 	## integer SentenceTier # (under updating...)
 integer ChunkTier 3
 integer F0Thresholdleft 75
 integer F0Thresholdright 500
 positive Smthf0Thr 2
 positive F0step 0.05
 positive Spectralemphasisthreshold 400
endform

Create Strings as file list... audioDataList *.wav
numberOfFiles = Get number of strings
		#nChunks = Get number of intervals... 'chunkTier'

fileOut$ = extension$ + ".txt"
filedelete 'fileOut$'
fileappend 'fileOut$' AUDIOFILE 'tab$' 'linguistic_category$' 'tab$' SEX 'tab$' CHUNK 'tab$' percV 'tab$' percC 'tab$' deltaV 'tab$' deltaC 'tab$' deltaVC 'tab$' deltaS 'tab$' varcoV 'tab$' varcoC 'tab$' varcoVC 'tab$' varcoS 'tab$' rpviV 'tab$' rpviC 'tab$' rpviVC 'tab$' rpviS 'tab$' npviV 'tab$' npviC 'tab$' npviC 'tab$' npviS  'tab$' rrV 'tab$' rrC 'tab$' rrVC 'tab$' rrS 'tab$' viV 'tab$' viC 'tab$' viVC 'tab$' viS 'tab$' yardV 'tab$' yardC 'tab$' yardVC 'tab$' yardS 'tab$' f0med 'tab$' f0peak 'tab$' f0min 'tab$' f0sd 'tab$' f0skew 'tab$' df0mean 'tab$' df0sd 'tab$' df0skew 'tab$' f0rate 'tab$' specemph 'tab$' meandurpause 'tab$' speechrate 'newline$'

for y from 1 to numberOfFiles
     select Strings audioDataList
     filename$ = Get string... y
     Read from file... 'filename$'
     soundFile$ = selected$ ("Sound")
     language$ = mid$(soundFile$,1,3)
     sex$ = mid$(soundFile$,4,3)
     textGridFile$ = soundFile$ + ".TextGrid"
		#if fileReadable (textGridFile$)
  	  Read from file... 'textGridFile$'
	  select TextGrid 'soundFile$'
  	  	#fileOut$ = soundFile$ + extension$ + ".txt"
	  	#filedelete 'fileOut$'


		#Read from file... 'audioFile$'
		#filename$ = selected$ ("Sound")
		#textGridFile$ = filename$ + ".TextGrid"
		#Read from file... 'textGridFile$'

nChunks = Get number of intervals... 'chunkTier'

#fileOut$ = filename$ + extension$ + ".txt"
#filedelete 'fileOut$'
#fileappend 'fileOut$' Chunk_ID  'tab$' percV 'tab$' percC 'tab$' deltaV 'tab$' deltaC 'tab$' deltaVC 'tab$' deltaS 'tab$' varcoV 'tab$' varcoC 'tab$' varcoVC 'tab$' varcoS 'tab$' rPVIV 'tab$' rPVIC 'tab$' rPVIVC 'tab$' rPVIS 'tab$' nPVIV 'tab$' nPVIC 'tab$' nPVIVC 'tab$' nPVIS  'tab$' RRV 'tab$' RRC 'tab$' RRVC 'tab$' RRS 'tab$' VIV 'tab$' VIC 'tab$' VIVC 'tab$' VIS 'tab$' YARDV 'tab$' YARDC 'tab$' YARDVC 'tab$' YARDS 'tab$' f0med 'tab$' f0peak 'tab$' f0min 'tab$' f0sd 'tab$' f0sk 'tab$' meandf0 'tab$' sdf0 'tab$' skdf0 'tab$' f0rate 'tab$' emph 'tab$' meandursil 'tab$' srate 'newline$'

for x from 1 to nChunks
chunk$ = Get label of interval... 'chunkTier' 'x'
if chunk$ <> ""
 startChunk = Get starting point... 'chunkTier' 'x'
 endChunk = Get end point... 'chunkTier' 'x'


#ZERO- #########################------ Melodic and relative intensity parameters -----######################################################

 select Sound 'soundFile$'
 Extract part... startChunk endChunk rectangular 1.0 yes
 sentfilename$ = selected$("Sound")
 totaldur = Get total duration
 begin = Get start time
 end = Get end time
 To Spectrum... yes
 emphasis = Get band energy difference... 0 'spectralemphasisthreshold' 0 0
 select Sound 'sentfilename$'
 To Pitch... 0.0 'f0Thresholdleft' 'f0Thresholdright'
 f0mean = Get mean... 'begin' 'end' semitones re 1 Hz
 f0median = Get quantile... 'begin' 'end' 0.5 semitones re 1 Hz
 f0peak = Get quantile... 'begin' 'end' 0.99 semitones re 1 Hz
 f0min = Get quantile... 'begin' 'end' 0.01 semitones re 1 Hz
 f0sd = Get standard deviation... 'begin' 'end' semitones
 f0skew = (f0mean-f0median)/f0sd
 Smooth... 'smthf0Thr'
 Interpolate
 To Matrix
 To Sound (slice)... 1
 To PointProcess (extrema)... 1 yes no None
 ntones = Get number of points
 tonerate = ntones/totaldur
 select Pitch 'sentfilename$'

#df0
Down to PitchTier
f0dur = Get total duration
meandf0 = 0 
f0ant = Get value at time... 'startChunk'
i = 1
timef0 = f0step + 'startChunk'
while timef0 <= (f0dur + startChunk)
f0current = Get value at time... 'timef0'
# Computes f0 discrete derivative, and its cumulative value
  df0'i' = f0current - f0ant
  meandf0 = meandf0 + df0'i'
  f0ant = f0current
  timef0 = timef0 + f0step
 i= i + 1
endwhile
i = i - 1
meandf0 = meandf0/i

# Computes f0 discrete derivative standard deviation
sdf0 = 0
for j from 1 to i
 sdf0 = sdf0 + (df0'j' - meandf0)*(df0'j' - meandf0)
endfor
sdf0 = sqrt(sdf0/(i-1))

# Computes f0 discrete derivative skewness
skdf0 = 0
for j from 1 to i
 skdf0 = skdf0 + ((df0'j' - meandf0)/sdf0)^3
endfor
skdf0 = (i/((i-1)*(i-2)))*skdf0

# Silence sucession descriptors
select TextGrid 'soundFile$'
nVC = Get interval at time... 'vCtier' 'endChunk'
start = Get interval at time... 'vCtier' 'startChunk'
tiniant = 0
sSil = 0
#sISI = 0
tzero = Get start point... 'vCtier' 2
cpt = 0
for i from start to nVC
  label$ = Get label of interval... 'vCtier' 'i'
  if label$ = "_" or label$ = "#" or label$ = "PAUSE"
   cpt = cpt + 1
   tini = Get start point... 'vCtier' 'i'
   tfin = Get end point... 'vCtier' 'i'
   dursil = round(('tfin'-'tini')*1000)
#   dISI = tini - tiniant
   sSil = sSil + dursil
#   sISI = sISI + dISI
   tiniant = tini
  endif
endfor
meandursil = sSil/cpt
#meanISI = (sISI-tzero)/(cpt-1)
         
     
#1- #########################------ %V -----######################################################

nVC = Get interval at time... 'vCtier' 'endChunk'
start = Get interval at time... 'vCtier' 'startChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
cptC = 0
sVdur = 0
sCdur = 0

procedure VC_duration
    for i from start to nVC - 1
 	label$ = Get label of interval... 'vCtier' 'i'
  	if label$ == "V"
    	 cptV = cptV + 1
  	 itime = Get starting point... 'vCtier' 'i'
  	 ftime = Get end point... 'vCtier' 'i'
  	 durV'cptV' = (ftime - itime)*1000
  	 sVdur = sVdur + durV'cptV'
    elsif label$  == "C"
         cptC = cptC + 1
  	 itime = Get starting point... 'vCtier' 'i'
  	 ftime = Get end point... 'vCtier' 'i'
  	 durC'cptC' = (ftime - itime)*1000
  	 sCdur = sCdur + durC'cptC'
 	endif
    endfor
endproc

call VC_duration

percV = sVdur/(sVdur + sCdur)


#2- #########################------ %C -----######################################################

percC = sCdur/(sVdur + sCdur)


#3- ########################------ DeltaV -----###################################################

cptV = 0
cptC = 0
sVdur = 0
sCdur = 0

call VC_duration

meanDurV = sVdur/cptV

sdDurV = 0
for i from 1 to cptV 
    sdDurV = sdDurV + (durV'i' - meanDurV)*(durV'i' - meanDurV)
endfor
deltaV = sqrt(sdDurV/(cptV -1))


#4- #########################------ DeltaC -----##################################################

meanDurC = sCdur/cptC

sdDurC = 0
for i from 1 to cptC 
    sdDurC = sdDurC + (durC'i' - meanDurC)*(durC'i' - meanDurC)
endfor
deltaC = sqrt(sdDurC/(cptC -1))


#5- ########################------ DeltaVC -----###################################################

cptVC = 0
sVCdur = 0

procedure AllSegs_duration
   for i from start to nVC - 1
 	label$ = Get label of interval... 'vCtier' 'i'
  	if label$ <> ""
    	 cptVC = cptVC + 1
  	 itime = Get starting point... 'vCtier' 'i'
  	 ftime = Get end point... 'vCtier' 'i'
  	 durVC'cptVC' = (ftime - itime)*1000
  	 sVCdur = sVCdur + durVC'cptVC'
	endif
   endfor
endproc

call AllSegs_duration

meanDurVC = sVCdur/cptVC

sdDurVC = 0
for i from 1 to cptVC
    sdDurVC = sdDurVC + (durVC'i' - meanDurVC)*(durVC'i' - meanDurVC)
endfor
deltaVC = sqrt(sdDurVC/(cptVC -1))


#6- ########################------ Delta-S -----###################################################

nVV = Get interval at time... 'vVtier' 'endChunk'
startVV = Get interval at time... 'vVtier' 'startChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
sVVdur = 0

procedure Syl_duration
   for i from startVV to nVV - 1
	label$ = Get label of interval... 'vVtier' 'i'
	 if label$ == "VV"
  	  cptVV = cptVV + 1
  	  itime = Get starting point... 'vVtier' 'i'
  	  ftime = Get end point... 'vVtier' 'i'
  	  durVV'cptVV' = (ftime - itime)*1000
  	  sVVdur = sVVdur + durVV'cptVV'
  	endif
   endfor
endproc

call Syl_duration

meanDurVV = sVVdur/cptVV

sdDurVV = 0
for i from 1 to cptVV 
    sdDurVV = sdDurVV + (durVV'i' - meanDurVV)*(durVV'i' - meanDurVV)
endfor
deltaSyl = sqrt(sdDurVV/(cptVV -1))


#7- ########################------ VarcoV -----###################################################

varcoV = (deltaV)/(meanDurV)


#8- ########################------ VarcoC -----###################################################

varcoC = (deltaC)/(meanDurC)


#9- ########################------ VarcoVC -----##################################################

varcoVC = (deltaVC)/(meanDurVC)


#10- ########################------ Varco-S -----#################################################

varcoSyl = (deltaSyl)/(meanDurVV)


#11- ##################------ Raw Pairwise Variability Index (rPVI-V) -----#######################

nVC = Get interval at time... 'vCtier' 'endChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
sVdur = 0
cptC = 0
sCdur =0 

procedure VC_PVI
	for i from start to nVC - 2
 	label$ = Get label of interval... 'vCtier' 'i'
 	  if label$ == "V"
  	   cptV = cptV + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durV = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurV = (nextFtime - nextItime)*1000
  	   sVdur = sVdur + abs(durV - nextDurV)
 	  elsif label$ == "C"
  	   cptC = cptC + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durC = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurC = (nextFtime - nextItime)*1000
  	   sCdur = sCdur + abs(durC - nextDurC)
 	  endif
	endfor
endproc

call VC_PVI

rPVIV = sVdur/cptV


#12- ##################------ Raw Pairwise Variability Index (rPVI-C) -----#######################

rPVIC = sCdur/cptC


#13- ##################------ Raw Pairwise Variability Index (rPVI-VC) -----#######################

cptVC = 0
sVCdur = 0

procedure AllSegs_PVI
	for i from start to nVC - 2
 	label$ = Get label of interval... 'vCtier' 'i'
 	  if label$ <> ""
  	   cptVC = cptVC + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durVC = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurVC = (nextFtime - nextItime)*1000
  	   sVCdur = sVCdur + abs(durVC - nextDurVC)
	  endif
	endfor
endproc

call AllSegs_PVI

rPVIVC = sVCdur/cptVC


#14- ##################------ Raw Pairwise Variability Index (rPVI-S) -----#######################

nVV = Get interval at time... 'vVtier' 'endChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
sVVdur = 0

procedure Syl_PVI
	for i from startVV to nVV - 2
 	label$ = Get label of interval... 'vVtier' 'i'
 	  if label$ <> ""
  	   cptVV = cptVV + 1
  	   itime = Get starting point... 'vVtier' 'i'
  	   ftime = Get end point... 'vVtier' 'i'
  	   durVV = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vVtier' 'nextI'
  	   nextFtime = Get end point... 'vVtier' 'nextI'
  	   nextDurVV = (nextFtime - nextItime)*1000
  	   sVVdur = sVVdur + abs(durVV - nextDurVV)
	  endif
	endfor
endproc

call Syl_PVI

rPVIVV = sVVdur/cptVV


#15- ###################------ Normalized Pairwise Variability Index (nPVI-V) -----################

nVC = Get interval at time... 'vCtier' 'endChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
sVdur = 0
cptC = 0
sCdur = 0

procedure VC_nPVI
	for i from start to nVC - 2
 	label$ = Get label of interval... 'vCtier' 'i'
 	  if label$ == "V"
  	   cptV = cptV + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durV = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurV = (nextFtime - nextItime)*1000
  	   sVdur = sVdur + abs(durV - nextDurV)/((durV + nextDurV)/2)
 	  elsif label$ == "C"
  	   cptC = cptC + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durC = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurC = (nextFtime - nextItime)*1000
  	   sCdur = sCdur + abs(durC - nextDurC)/((durC + nextDurC)/2)
 	  endif
	endfor
endproc

call VC_nPVI

nPVIV = sVdur/cptV


#16- ###################------ Normalized Pairwise Variability Index (nPVI-C) -----################

nPVIC = sCdur/cptC


#17- ###################------ Normalized Pairwise Variability Index (nPVI-VC) -----################

cptVC = 0
sVCdur = 0

procedure AllSegs_nPVI
	for i from start to nVC - 2
 	label$ = Get label of interval... 'vCtier' 'i'
 	  if label$ <> ""
  	   cptVC = cptVC + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durVC = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurVC = (nextFtime - nextItime)*1000
  	   sVCdur = sVCdur + abs(durVC - nextDurVC)/((durVC + nextDurVC)/2)
	  endif
	endfor
endproc
call AllSegs_nPVI

nPVIVC = sVCdur/cptVC


#18- ###################------ Normalized Pairwise Variability Index (nPVI-S) -----################

nVV = Get interval at time... 'vVtier' 'endChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
sVVdur = 0

procedure Syl_nPVI
	for i from startVV to nVV - 2
 	label$ = Get label of interval... 'vVtier' 'i'
 	  if label$ <> ""
  	   cptVV = cptVV + 1
  	   itime = Get starting point... 'vVtier' 'i'
  	   ftime = Get end point... 'vVtier' 'i'
  	   durVV = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vVtier' 'nextI'
  	   nextFtime = Get end point... 'vVtier' 'nextI'
  	   nextDurVV = (nextFtime - nextItime)*1000
  	   sVVdur = sVVdur + abs(durVV - nextDurVV)/((durVV + nextDurVV)/2)
	  endif
	endfor
endproc

call Syl_nPVI

nPVIVV = sVVdur/cptVV


#19 -#######################------ Rhythm Ratio (RR-V) -----########################################

nVC = Get interval at time... 'vCtier' 'endChunk'
start = Get interval at time... 'vCtier' 'startChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
ratioV = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
   if label$ == "V"
         cptV = cptV + 1
         itime = Get starting point... 'vCtier' 'i'
         ftime = Get end point... 'vCtier' 'i'
         durV = (ftime - itime)*1000
         nextI = i + 1
         nextItime = Get starting point... 'vCtier' 'nextI' 
         nextFtime = Get end point... 'vCtier' 'nextI' 
         nextDurV = (nextFtime - nextItime)*1000
	
       if durV < nextDurV
   	 ratioV = ratioV + abs(durV/nextDurV)
 	else
   	 ratioV = ratioV + abs(nextDurV/durV)
       endif
   endif
endfor

rRV = (ratioV/cptV)*100


#20 -#######################------ Rhythm Ratio (RR-C) -----########################################

cptC = 0
ratioC = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
   if label$ == "C"
         cptC = cptC + 1
         itime = Get starting point... 'vCtier' 'i'
         ftime = Get end point... 'vCtier' 'i'
         durC = (ftime - itime)*1000
         nextI = i + 1
         nextItime = Get starting point... 'vCtier' 'nextI' 
         nextFtime = Get end point... 'vCtier' 'nextI' 
         nextDurC = (nextFtime - nextItime)*1000
	
       if durC < nextDurC
   	 ratioC = ratioC + abs(durC/nextDurC)
 	else
   	 ratioC = ratioC + abs(nextDurC/durC)
       endif
   endif
endfor


rRC = (ratioC/cptC)*100


#21 -#######################------ Rhythm Ratio (RR-VC) -----########################################

cptVC = 0
ratioVC = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
  if label$ <> ""
	 cptVC = cptVC + 1
	 itime = Get starting point... 'vCtier' 'i'
	 ftime = Get end point... 'vCtier' 'i'
   	 durVC = (ftime - itime)*1000
   	 nextI = i + 1
   	 nextItime = Get starting point... 'vCtier' 'nextI'
   	 nextFtime = Get end point... 'vCtier' 'nextI'
   	 nextDurVC = (nextFtime - nextItime)*1000

	if durVC < nextDurVC
   	 ratioVC = ratioVC +  abs(durVC/nextDurVC)
 	else
   	 ratioVC = ratioVC +  abs(nextDurVC/durVC)
        endif
   endif
endfor

rRVC = (ratioVC/cptVC)*100


#22 -#######################------ Rhythm Ratio (RR-S) -----########################################

nVV = Get interval at time... 'vVtier' 'endChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
ratioVV = 0

for i from startVV to nVV - 2
label$ = Get label of interval... 'vVtier' 'i'
  if label$ <> ""
	 cptVV = cptVV + 1
   	 itime = Get starting point... 'vVtier' 'i'
   	 ftime = Get end point... 'vVtier' 'i'
   	 durVV = (ftime - itime)*1000
   	 nextI = i + 1
   	 nextItime = Get starting point... 'vVtier' 'nextI'
   	 nextFtime = Get end point... 'vVtier' 'nextI'
   	 nextDurVV = (nextFtime - nextItime)*1000

	if durVV < nextDurVV
   	 ratioVV = ratioVV +  abs(durVV/nextDurVV)
 	else
   	 ratioVV = ratioVV +  abs(nextDurVV/durVV)
      	endif
   endif
endfor

rRS = (ratioVV/cptVV)*100


#23 -#######################------ Variability Index (VI-V) -----###################################

nVC = Get interval at time... 'vCtier' 'endChunk'
start = Get interval at time... 'vCtier' 'startChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
sVdur = 0
vIV = 0

for i from start to nVC - 2
 	label$ = Get label of interval... 'vCtier' 'i'
 	  if label$ == "V"
  	   cptV = cptV + 1
  	   itime = Get starting point... 'vCtier' 'i'
  	   ftime = Get end point... 'vCtier' 'i'
  	   durV = (ftime - itime)*1000
  	   nextI = i + 1
  	   nextItime = Get starting point... 'vCtier' 'nextI'
  	   nextFtime = Get end point... 'vCtier' 'nextI'
  	   nextDurV = (nextFtime - nextItime)*1000
	   sVdur = sVdur + durV
	   vIV = vIV + abs(durV - nextDurV)
 	  endif
endfor

meanDurV_VI = sVdur/cptV	
vIV = vIV/(cptV*meanDurV_VI)


#24 -#######################------ Variability Index (VI-C) -----###################################

cptC = 0
sCdur = 0
vIC = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
 	if label$ == "C"
         cptC = cptC + 1
         itime = Get starting point... 'vCtier' 'i'
         ftime = Get end point... 'vCtier' 'i'
         durC = (ftime - itime)*1000
         nextI = i + 1
         nextItime = Get starting point... 'vCtier' 'nextI' 
         nextFtime = Get end point... 'vCtier' 'nextI' 
         nextDurC = (nextFtime - nextItime)*100
	 sCdur = sCdur + durC
	   vIC = vIC + abs(durC - nextDurC)
 	  endif
endfor

meanDurC_VI = sCdur/cptC	
vIC = vIC/(cptV*meanDurC_VI)


#25 -#######################------ Variability Index (VI-VC) -----###################################

cptVC = 0
sVCdur = 0
vIVC = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
  	if label$ <> ""
	 cptVC = cptVC + 1
   	 itime = Get starting point... 'vCtier' 'i'
  	 ftime = Get end point... 'vCtier' 'i'
   	 durVC = (ftime - itime)*1000
   	 nextI = i + 1
   	 nextItime = Get starting point... 'vCtier' 'nextI'
   	 nextFtime = Get end point... 'vCtier' 'nextI'
   	 nextDurVC = (nextFtime - nextItime)*1000
	 sVCdur = sVCdur + durVC
	   vIVC = vIVC + abs(durVC - nextDurVC)
 	  endif
endfor

meanDurVC_VI = sVCdur/cptVC	
vIVC = vIVC/(cptVC*meanDurVC_VI)


#26 -#######################------ Variability Index (VI-S) -----###################################

nVV = Get interval at time... 'vVtier' 'endChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
sVVdur = 0
vIVV = 0

for i from startVV to nVV - 2
label$ = Get label of interval... 'vVtier' 'i'
	cptVV = cptVV + 1
	if label$ <> ""
   	 itime = Get starting point... 'vVtier' 'i'
   	 ftime = Get end point... 'vVtier' 'i'
   	 durVV = (ftime - itime)*1000
   	 nextI = i + 1
   	 nextItime = Get starting point... 'vVtier' 'nextI'
   	 nextFtime = Get end point... 'vVtier' 'nextI'
   	 nextDurVV = (nextFtime - nextItime)*1000
	 sVVdur = sVVdur + durVV
	   vIVV = vIVV + abs(durVV - nextDurVV)
 	  endif
endfor

meanDurVV_VI = sVVdur/cptVV
vIVV = vIVV/(cptVV*meanDurVV_VI)


#27 -#######################------ Yet Another Rhythm Determination (YARD-V) -----##################

nVC = Get interval at time... 'vCtier' 'endChunk'
start = Get interval at time... 'vCtier' 'startChunk'

#nVC = Get number of intervals... 'vCtier'
cptV = 0
szV = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
  if label$ == "V"
   cptV = cptV + 1
   itime = Get starting point... 'vCtier' 'i'
   ftime = Get end point... 'vCtier' 'i'
   durV'cptV' = (ftime - itime)*1000
   nextI = i + 1
   nextItime = Get starting point... 'vCtier' 'nextI' 
   nextFtime = Get end point... 'vCtier' 'nextI' 
   nextDurV'nextI' = (nextFtime - nextItime)*1000
   zdurV = (durV'cptV' - meanDurV)/deltaV
   znextDurV = (nextDurV'nextI' - meanDurV)/deltaV
   szV = szV + abs(zdurV - znextDurV)
  endif
endfor

yardV = szV/cptV


#28 -#######################------ Yet Another Rhythm Determination (YARD-C) -----##################

cptC = 0
szC= 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
  if label$ == "C"
   cptC = cptC + 1
   itime = Get starting point... 'vCtier' 'i'
   ftime = Get end point... 'vCtier' 'i'
   durC'cptC' = (ftime - itime)*1000
   nextI = i + 1
   nextItime = Get starting point... 'vCtier' 'nextI' 
   nextFtime = Get end point... 'vCtier' 'nextI' 
   nextDurC'nextI' = (nextFtime - nextItime)*1000
   zdurC = (durC'cptC' - meanDurC)/deltaC
   znextDurC = (nextDurC'nextI' - meanDurC)/deltaC
   szC = szC + abs(zdurC - znextDurC)
  endif
endfor

yardC = szC/cptC


#29 -#######################------ Yet Another Rhythm Determination (YARD-VC) -----##################

cptVC = 0
szVC = 0

for i from start to nVC - 2
label$ = Get label of interval... 'vCtier' 'i'
  if label$ <> ""
   cptVC = cptVC + 1
   itime = Get starting point... 'vCtier' 'i'
   ftime = Get end point... 'vCtier' 'i'
   durVC'cptVC' = (ftime - itime)*1000
   nextI = i + 1
   nextItime = Get starting point... 'vCtier' 'nextI'
   nextFtime = Get end point... 'vCtier' 'nextI'
   nextDurVC'nextI' = (nextFtime - nextItime)*1000
   zdurVC = (durVC'cptVC' - meanDurVC)/deltaVC
   znextDurVC = (nextDurVC'nextI' - meanDurVC)/deltaVC
   szVC = szVC + abs(zdurVC - znextDurVC)
  endif
endfor

yardVC = szVC/cptVC


#30 -#######################------ Yet Another Rhythm Determination (YARD-S) -----##################

nVV = Get interval at time... 'vVtier' 'endChunk'

#nVV = Get number of intervals... 'vVtier'
cptVV = 0
szVV = 0

for i from startVV to nVV - 2
label$ = Get label of interval... 'vVtier' 'i'
  if label$ == "VV"
   cptVV = cptVV + 1
   itime = Get starting point... 'vVtier' 'i'
   ftime = Get end point... 'vVtier' 'i'
   durVV'cptVV' = (ftime - itime)*1000
   nextI = i + 1
   nextItime = Get starting point... 'vVtier' 'nextI'
   nextFtime = Get end point... 'vVtier' 'nextI'
   nextDurVV'nextI' = (nextFtime - nextItime)*1000
   zdurVV = (durVV'cptVV' - meanDurVV)/deltaSyl
   znextDurVV = (nextDurVV'nextI' - meanDurVV)/deltaSyl
   szVV = szVV + abs(zdurVV - znextDurVV)
  endif
endfor

yardVV = szVV/cptVV

srate = 1000/meanDurVV

fileappend 'fileOut$' 'filename$' 'tab$' 'language$' 'tab$' 'sex$' 'tab$' 'chunk$' 'tab$' 'percV:2' 'tab$' 'percC:2' 'tab$' 'deltaV:1' 'tab$' 'deltaC:1' 'tab$' 'deltaVC:1' 'tab$' 'deltaSyl:2' 'tab$' 'varcoV:2' 'tab$' 'varcoC:2''tab$' 'varcoVC:2' 'tab$' 'varcoSyl:2' 'tab$' 'rPVIV:2' 'tab$' 'rPVIC:2' 'tab$' 'rPVIVC:2' 'tab$' 'rPVIVV:2' 'tab$' 'nPVIV:2' 'tab$' 'nPVIC:2' 'tab$' 'nPVIVC:2' 'tab$' 'nPVIVV:2' 'tab$' 'rRV:2' 'tab$' 'rRC:2' 'tab$' 'rRVC:2' 'tab$' 'rRS:2' 'tab$' 'vIV:2' 'tab$' 'vIC:2' 'tab$' 'vIVC:2' 'tab$' 'vIVV:2' 'tab$' 'yardV:2' 'tab$' 'yardC:2' 'tab$' 'yardVC:2' 'tab$' 'yardVV:2' 'tab$' 'f0median:2' 'tab$' 'f0peak:2' 'tab$' 'f0min:2' 'tab$' 'f0sd:2' 'tab$' 'f0skew:2' 'tab$' 'meandf0:2' 'tab$' 'sdf0:2' 'tab$' 'skdf0:2' 'tab$' 'tonerate:2' 'tab$' 'emphasis:2' 'tab$' 'meandursil:2' 'tab$' 'srate:2' 'newline$'

	endif
    endif
 endfor
endfor

select all
minus Strings audioDataList
Remove
select Strings audioDataList
View & Edit